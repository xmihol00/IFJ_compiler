package main

func foo0() (int){
	return 1
}

func foo1() (int){
	return 2
}

func foo2() (int){
	return 3
}

func main() {
	o := 1
	p := 2
	q := 3

	x0 := o*(o-(-(-3))+6)/+q < (+2)
	print(x0,"\n")

	x1 := foo1()+(-6)-foo0()-(-o)-((o/-6+(-p)*((-3)+(-(-1))*+foo2()-(-foo1())-foo2()*foo1()-o))/foo0()+(+2))
	print(x1,"\n")

	x2 := !!((q+(+(+2))-6+6) < q*+(-3)+(+foo0())-foo1()-(((-(-1))*6)/6)) && foo2()-(+foo0())/foo2() > (-(-1))
	print(x2,"\n")

	x3 := foo1() < ((-3)*(-3)-(-3)-(-o)-q-(-(+2))+o)
	print(x3,"\n")

	x4 := !((((-(-1))-(-foo1())+(+2)*-6*-p-(-q)-o))+foo1()*q <= foo1())
	print(x4,"\n")

	x5 := ((-(-1))+(-foo1())/foo1()+(-foo1())-p-(-(-(-1)))*((-3)+(-p)*(+2))) > q
	print(x5,"\n")

	x6 := !!((+2)+q > (-3)+((+2)*6-(+q)-p)-(foo2()+(+foo1())/(+2)*-foo0())*(-(-1)))
	print(x6,"\n")

	x7 := (6+foo2()) >= (6-p)+p && !!!!((foo1()-(-foo0())+(-3)) <= q)
	print(x7,"\n")

	x8 := foo1()*-foo0()*+(+2)-(-6)*6 > (6-(+foo1())+foo0()+p/o*-foo1()) || foo2() == (-3)*-p
	print(x8,"\n")

	x9 := ((((+2)-foo1()-foo1()-(+6)+o)-(+p)+6+(-p)*o+(-(-(-1)))-o+o))
	print(x9,"\n")

	x10 := !!(foo2()-q+(-o)*(((+2)-q+(+q)+foo2()+(+(+2))+foo2())/(-(-1))) <= o+q) || foo0() <= foo2()
	print(x10,"\n")

	x11 := foo2()/((q+(-(-(-1)))-6+(-foo1())*foo1()+(+2)*o)-(+6)+q-(-foo1())+foo1())
	print(x11,"\n")

	x12 := ((6*foo2())-p*foo0())
	print(x12,"\n")

	x13 := ((+2)+foo0())+q != (((-3)+(-(+2))*q-(-3))-(-foo1())+o*+(-3)-(+foo2())-(+2)-o) && foo1() != p || (-3)-(-(+2))*(-3)-(-(-(-1)))-foo0() == p
	print(x13,"\n")

	x14 := (o*+foo2()) <= foo0() && (-(-1))*p <= foo2()
	print(x14,"\n")

	print(o,p,q,"\n")
}

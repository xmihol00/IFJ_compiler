package main

func foo0() (int){
	return 1
}

func foo1() (int){
	return 2
}

func foo2() (int){
	return 3
}

func main() {
	o := 1
	p := 2
	q := 3

	x0 := (foo0()+(foo1()*-foo0()-(-(-(-1)))+foo1()+(-(-3))+(+2)))*+foo0()
	print(x0,"\n")

	x1 := (+2) == (-(-1))+(-6)-((foo1()+89)*((o+56)/(foo2()-(-foo0())-(-81)))) && !!!((-(-1))+foo1()*foo2()+6*(-3) != 6)
	print(x1,"\n")

	x2 := !!(foo2() != ((-(-1))*+foo2()*foo0()+p+(-p)-foo0()+(-p)*foo2()))
	print(x2,"\n")

	x3 := !((+2) != foo1()) && !(((p*-(-3)))*(-3) >= q)
	print(x3," line 3\n")

	x4 := !(((o-(+(-(-1)))/foo0()-q*(-(-1))*+q)) < foo1()-(foo1()+(+foo1())/(-3)*foo2()))
	print(x4,"\n")

	x5 := ((6-(-(+2))-foo1())*o)+(-o)+foo2()+(+p)*(+2)
	print(x5,"\n")

	x6 := !((-(-1)) == (foo1()-(-o)+p)/+foo1())
	print(x6,"\n")

	x7 := !!((+2)+(+foo0())-(foo0()-q) == (p*(p-(-foo0())-(+2)-o)-o))
	print(x7,"\n")

	x8 := foo2()+(+o)-(+2)/(foo2()-(-(+2))/((-3)+foo1()*+(-(-1))-(+(-3))+p)-(+(-(-1)))+foo2())
	print(x8,"\n")

	x9 := !!((6+(-(-3))-(+2))+(+(+2))-((6*+q)-(-o)-(+2)-foo2()) <= 6)
	print(x9,"\n")

	x10 := !(((-(-1))/-(-3))-(-foo0())*(-3)+(+(+2))*(+2) == p)
	print(x10,"\n")

	x11 := !(((foo2()*foo2())-(-3)) > 6)
	print(x11,"\n")

	x12 := ((-(-1))-(+foo2())/(+2)-foo1()-p-(+foo1())/foo0()) > foo1()-(+q)*(foo1()/+q) && o+(-foo2())/foo2()+p+(-p)/(-3) == o
	print(x12,"\n")

	x13 := foo0()+(+(+2))-(o+o-(+foo2())/6*-6) >= o
	print(x13,"\n")

	x14 := (-3)+((q/-q)+(+2)-(-q)+(+2)/p)
	print(x14,"\n")

	print(o,p,q,"\n")
}

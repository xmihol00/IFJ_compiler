package main

func foo0() (int){
	return 1
}

func foo1() (int){
	return 2
}

func foo2() (int){
	return 3
}

func main() {
	o := 1
	p := 2
	q := 3

	x0 := (foo1()/+6+foo0()*(-(-1))-q) <= p
	print(x0,"\n")

	x1 := (-(-1)) == (+2) || (foo1()+(+foo0())+(q+p/+foo1())) < foo0() || o == 6
	print(x1,"\n")

	x2 := !((((foo0()-(-(-(-1)))-(-(-1))+foo2()-foo1()+foo0()))) == q) && !(foo2() >= foo1())
	print(x2,"\n")

	x3 := 6 <= foo1() && !!!!(((-(-1))+(+o)+q)+o*q+(+foo1())+foo1() < o-(+(-(-1)))-p)
	print(x3,"\n")

	x4 := foo0() == (foo2()/+q)-(-(+2))+(+2) || p >= (+2)
	print(x4,"\n")

	x5 := ((-3)/((+2)*foo1())-(+(+2))-(o+(+q)+p)-o)
	print(x5,"\n")

	x6 := !(((+2)+(+p)*(-(-1))) <= (-3))
	print(x6,"\n")

	x7 := ((foo1()-q)*foo1()+(-p)-foo2()*+p)-q
	print(x7,"\n")

	x8 := !(((foo0()/(-(-1))+(-foo1())+(-3))+(-o)-q) <= q)
	print(x8,"\n")

	x9 := !!((((+2)+foo2())+(+foo1())+(-3)) <= o-(-(+2))-6)
	print(x9,"\n")

	x10 := (((q*-p+(+(-3))-foo2()/+foo1()+(+2))))
	print(x10,"\n")

	x11 := !!((foo1()-(-foo2())-(-(-1)))*(-3) >= (-(-1))) || !(q+6*(-(-1)) != foo1()-(+p)+(-(-1)))
	print(x11,"\n")

	x12 := o <= (-(-1)) && !(foo0()-(-(-3))/p <= (p+(-3)+foo1()+((foo2()-o+(+foo2())-foo1())+foo1()-foo1()*(-3))))
	print(x12,"\n")

	x13 := (+2) < foo1() || !!((((-3)*(-3))-(-3)-(-foo0())-(-(-1))+o)*foo1()-6/+(-(-1))/+6/+foo0()-(+p)+foo2()+foo1()+(-foo1())/q >= (-3)) || !!!!!!!!!((-3) > o)
	print(x13,"\n")

	x14 := !!(q > (o-(+(-3))*(q*p)/+foo1()+foo1()-foo1()+(+2)-o*o-foo2())) && o+(-(-1))-(-(-1))-(-q)+o/foo0() == 6 || !(foo2()+6-(+p)*6 <= (+2)) && p != o
	print(x14,"\n")

	print(o,p,q,"\n")
}

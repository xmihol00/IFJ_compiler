package main

func foo0() (float64){
	return 1.1
}

func foo1() (float64){
	return 2.1
}

func foo2() (float64){
	return 3.1
}

func main() {
	o,p,q :=1.2,2.3,3.4

	if foo2() != o || !((-(-1.4)) < ((((-(-1.4))*+(-3.1)/(-3.1))*foo1())+(-foo2())*(+2.1)*p)/-foo0()-p*-o) {
		print(":D0","\n")
	}

	if !!!!((q+6.1*-(-(-1.4))) < p) {
		print(":D1","\n")
	}

	if !(q+(+foo1())+(-3.1)+foo1() == foo2()+foo0()+(o*(-(-1.4)))) || p <= q {
		print(":D2","\n")
	}

	if 6.1+((-(-1.4))-(-(-3.1))-((foo0()+foo1())))+foo0() <= (-3.1) {
		print(":D3","\n")
	}

	if foo2()-(+p)/6.1 != ((-(-1.4))*(6.1+(+(-3.1))/(-3.1))) && q-foo1()*-(-3.1)/foo0()-(+2.1) > (-(-1.4))*+6.1 {
		print(":D4","\n")
	}

	if (((-(-1.4))*+foo2()+(-(-3.1))*(+2.1)-(+(-3.1))-foo1()/+foo0()*-q*+6.1+foo0()*6.1*-foo2()-o)*foo2()) <= (+2.1) {
		print(":D5","\n")
	}

	if ((-3.1)+foo1()*-foo0()-o-(+p)*(+2.1)) == foo2() {
		print(":D6","\n")
	}

	if (-3.1) < (-(-1.4)) && !((foo2()+foo1()-p-(-(-1.4))-(+o)*(+2.1))+(-(-3.1))+foo0()/+foo0()-(-(-1.4))-(+(-3.1))+foo0() > foo0()) || foo2() >= foo2() {
		print(":D7","\n")
	}

	if (foo1()+o*6.1+p-(-6.1)/(+2.1)+(+foo2())*(-3.1)+(+foo2())-6.1)/6.1 > foo0()/+q {
		print(":D8","\n")
	}

	if !(foo1()+(q*o*-(+2.1)+o) == foo2()) {
		print(":D9","\n")
	}

	if !((-(-1.4))+((+2.1)-(-q)+(+2.1)*foo0()) >= foo1()) || (((-(-1.4))+(-q)-(-(-1.4))))-(-p)-(-(-1.4))-(+2.1) < q {
		print(":D10","\n")
	}

	if foo1() >= (6.1*foo1()-(-(-1.4))+(+foo1())/(+2.1)/-q) || !!!(p == (-3.1)) {
		print(":D11","\n")
	}

	if ((o/+(-(-1.4))+(-6.1)+(+2.1))) >= (-(-1.4)) {
		print(":D12","\n")
	}

	if !!!!!((6.1-foo2()+(+foo0())+p*+p) != foo2()+(p+p-(-o)-q-(-foo2())/foo2())) {
		print(":D13","\n")
	}

	if (6.1+(-3.1)) > 6.1-6.1 {
		print(":D14","\n")
	}

	print(o,p,q,"\n")
}

package main

func foo0() (float64){
	return 1.1
}

func foo1() (float64){
	return 2.1
}

func foo2() (float64){
	return 3.1
}

func main() {
	o,p,q :=1.2,2.3,3.4

	if !!!((q-(+foo2())*foo2()/6.1) >= 6.1) && q*+q*o < o*+foo2() && foo1()+(-(+2.1))*o+(-o)+(-(-1.4)) >= (+2.1)-6.1 {
		print(":D0","\n")
	}

	if !(p > (o*q)) {
		print(":D1","\n")
	}

	if foo1() > ((-(-1.4))+(+(+2.1))+q) || o*-foo0()-(-p)-(-(-1.4)) > (-(-1.4)) {
		print(":D2","\n")
	}

	if !!((((+2.1)+(-(+2.1))-(+2.1)-(-foo1())/foo0()-(-(-1.4))-(+foo0())-foo0()/(+2.1))/q)+p <= foo2()) && foo2()+6.1+(-foo0())-o*+(-(-1.4))*o-(-foo2())-p != o {
		print(":D3","\n")
	}

	if ((-3.1)*+((-(-1.4))-(+(-(-1.4)))*foo0())/6.1+(-p)/q+(-(-3.1))*q)-(+foo1())+p > 6.1 {
		print(":D4","\n")
	}

	if ((-(-1.4))+foo0()) != o {
		print(":D5","\n")
	}

	if p >= (((-3.1)-(+foo2())-(foo0()+o))-foo2()*foo0()-(+p)-foo0()+(-3.1)) || !((-3.1) == q) {
		print(":D6","\n")
	}

	if q >= 6.1*foo0()+(+foo1())*6.1/((-3.1)+(-3.1)+p+(+6.1)-(-3.1)) || !!!((-(-1.4)) != (((+2.1)*+(+2.1)*p)/6.1)) {
		print(":D7","\n")
	}

	if foo0()+(+foo2())+(((-(-1.4))+(+6.1)-foo2())) < foo0() || o/foo2() > q/+(-3.1)/(-3.1) {
		print(":D8","\n")
	}

	if !!((((-(-1.4))+(-(-1.4))))-(+(+2.1))-(-(-1.4))*-((-(-1.4))+(-foo1())-(+2.1))-(+foo2())+(-(-1.4)) != foo0()) {
		print(":D9","\n")
	}

	if !((foo2()-(-3.1)) > (p*-(-(-1.4)))) {
		print(":D10","\n")
	}

	if ((-3.1)-(-p)-foo0()) <= (foo0()*foo0()*o)+(-o)*foo1() {
		print(":D11","\n")
	}

	if (foo1()*((+2.1)*6.1*o)*+o-q)*+(-3.1)+foo0()+(+(-(-1.4)))*(+2.1) >= foo2() {
		print(":D12","\n")
	}

	if !((foo2()-(+foo0())*foo2()) >= p*(-3.1)) {
		print(":D13","\n")
	}

	if (p*+(-(-1.4)))+(foo2()-foo0())*(-(-1.4)) == o {
		print(":D14","\n")
	}

	print(o,p,q,"\n")
}

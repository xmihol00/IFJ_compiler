package main

func foo0() (float64){
	return 1.1
}

func foo1() (float64){
	return 2.1
}

func foo2() (float64){
	return 3.1
}

func main() {
	o,p,q :=1.2,2.3,3.4

	if foo1()/-(q-(q-(+o)-o-(-foo0())+((-3.1)-(+6.1)-(-(-1.4))/+foo0()))-(+q)*p+o-(+(-3.1))*o) != foo1() {
		print(":D0","\n")
	}

	if !(foo2()*-(-(-1.4))/(6.1+((foo2()*+q+q)-(-(-3.1))-(-(-1.4))))*o-(-(-1.4))*(+2.1) == foo0()) {
		print(":D1","\n")
	}

	if ((foo1()+(-(-3.1))+6.1*o*-(foo0()+foo0()+(+(-(-1.4)))+o+(+foo2())-q*(-3.1)))-(+foo2())-p*foo0())+(+6.1)+q*p != q {
		print(":D2","\n")
	}

	if (foo2()/+foo1()) != o {
		print(":D3","\n")
	}

	if (((-(-1.4))+(+p)-6.1-p-(+p)+foo0())+(-6.1)+o*+(-3.1)*+foo0())*(+2.1)+(-6.1)/foo2()*(+2.1)+p/(+2.1)-(+(+2.1))-foo0() <= foo2() && !((+2.1) > foo2()) {
		print(":D4","\n")
	}

	if foo1() > (+2.1) && !!!(((-(-1.4))*((6.1*-(+2.1)*foo2()))-(+foo1())*q) >= foo1()) {
		print(":D5","\n")
	}

	if !((o+6.1-(+2.1)-(-(-1.4)))+6.1-(-6.1)-foo0() != foo0()) {
		print(":D6","\n")
	}

	if !(((-3.1)*-(-3.1)-p) == p+p) {
		print(":D7","\n")
	}

	if (+2.1) >= foo2()+(+(+2.1))*(+2.1)+6.1*+(((-(-1.4))*+(+2.1)+(+(-3.1))+p)) || !((q*6.1*o-(-foo1())-(+2.1)/o/(-(-1.4))) != p) {
		print(":D8","\n")
	}

	if ((+2.1)+(-o)+6.1/o)+foo0()+(-6.1)-q/(foo0()+(o+(+(-(-1.4)))+o-(+foo2())+(-(-1.4))))*+p-(-foo2())-p-(-3.1)-(+foo1())-o-p-(-o)+6.1 > foo2() {
		print(":D9","\n")
	}

	if !(o+(+foo0())-((-(-1.4))+foo1()*+(-(-1.4))+(+o)-q-(+q)/6.1)-foo1() == foo2()*foo1()+(-p)+p) || o+foo2() >= (-3.1) {
		print(":D10","\n")
	}

	if !!!!((o-(+p)-foo0())-foo1()-(-3.1) < foo0()) {
		print(":D11","\n")
	}

	if !!!(foo0() <= (foo2()-(-(-1.4)))) || !(foo2()*q/foo0() <= foo1()) && !(6.1*foo2() != foo0()) && !(q >= foo2()) && (-3.1)-(-6.1)/q != (-(-1.4))-o {
		print(":D12","\n")
	}

	if (((-3.1)+foo1()*o))/6.1 == foo2() {
		print(":D13","\n")
	}

	if !!(foo1()-(-(-3.1))*(((-3.1)-(-p)*(p+p))) >= q) || p > (-(-1.4)) {
		print(":D14","\n")
	}

	print(o,p,q,"\n")
}

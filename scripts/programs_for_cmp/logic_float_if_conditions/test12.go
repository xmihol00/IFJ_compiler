package main

func foo0() (float64){
	return 1.1
}

func foo1() (float64){
	return 2.1
}

func foo2() (float64){
	return 3.1
}

func main() {
	o,p,q :=1.2,2.3,3.4

	if o == (+2.1)/(p-(-(-(-1.4)))-((6.1-foo0()))-(-3.1)-(-foo1())+foo0()*(+2.1))-foo0()*foo2()-foo2() {
		print(":D0","\n")
	}

	if !((p-foo0())+(+(-3.1))*6.1 != foo2()) {
		print(":D1","\n")
	}

	if q+(+2.1) <= foo2() && (-(-1.4))/(((o+foo0())+6.1/+foo1()))-(-(-1.4))-p-(-3.1)+(-(-(-1.4)))+6.1+foo1() <= p {
		print(":D2","\n")
	}

	if q == foo1() && ((p*6.1-q*-q+(+q)-(-3.1)*+foo2())+(-(-1.4))*(-3.1))-(+(+2.1))-p+foo1()-foo1() < (-3.1) {
		print(":D3","\n")
	}

	if ((-(-1.4))+(-3.1))+(((-(-1.4))-foo1())+q) < (+2.1) || (-(-1.4)) == (+2.1) && !((+2.1)+q == 6.1) {
		print(":D4","\n")
	}

	if (o+(-(+2.1))+(+2.1)*-(-3.1)) == o {
		print(":D5","\n")
	}

	if !!!!!!!!((p+(-foo0())*q+(+foo2())-o/-(-3.1)) > foo2()) {
		print(":D6","\n")
	}

	if p/(+2.1)/-((foo2()+(-foo2())/(foo2()-(-q)+foo0()))) < foo0() {
		print(":D7","\n")
	}

	if (6.1+(-o)+(-(-1.4))*-q+o+(-6.1)+(+2.1))-(-foo1())-foo1()+(-3.1)+o != q && foo0() >= foo2() {
		print(":D8","\n")
	}

	if !((q-q)*+((foo1()-foo0()/6.1-(+(-(-1.4)))-p-(-(-1.4)))*(-(-1.4))-(+(+2.1))-foo0()) != q-(-o)/(+2.1)) {
		print(":D9","\n")
	}

	if !(((-3.1)-(-foo1())-(q*p-(+2.1))+6.1*+(-3.1)*(-3.1)*-(-(-1.4))+(+(+2.1))-foo0())-p <= (+2.1)) {
		print(":D10","\n")
	}

	if !(((-3.1)+(+6.1)*6.1)-6.1 != p) {
		print(":D11","\n")
	}

	if !!((-(-1.4)) <= p/+(((+2.1)*foo2()+p))) && 6.1 <= 6.1 {
		print(":D12","\n")
	}

	if !!!(((foo2()+(+foo2())-o)*+(+2.1))+(-6.1)-q != foo0()) || !(foo1()+6.1 != 6.1) && !((foo1()/foo0())-(+foo0())*(+2.1)-foo2() >= foo1()-foo0()) {
		print(":D13","\n")
	}

	if !!(q+(+(-(-1.4)))*(foo1()+(+p)+(foo2()/-(+2.1)+(+foo0())-foo2()-(+p)-foo0()*6.1)) > foo1()) || 6.1-foo1() < p+(-foo2())-o/foo0() {
		print(":D14","\n")
	}

	print(o,p,q,"\n")
}

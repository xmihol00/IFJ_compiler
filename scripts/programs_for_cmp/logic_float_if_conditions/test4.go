package main

func foo0() (float64){
	return 1.1
}

func foo1() (float64){
	return 2.1
}

func foo2() (float64){
	return 3.1
}

func main() {
	o,p,q :=1.2,2.3,3.4

	if !!!!((-3.1)-6.1 > (+2.1)-(-foo0())+foo1()) && foo2()-(+2.1) < foo1()+(+(-(-1.4)))-(+2.1)/+q && !(((foo0()/(-3.1))*-(-(-1.4))+(+foo2())/q+(-foo0())*6.1/(+2.1)) <= foo0()) {
		print(":D0","\n")
	}

	if !((((6.1-foo2()+(+(+2.1))*(-3.1)))-(-(-1.4))-foo0()) <= p) {
		print(":D1","\n")
	}

	if !(foo2() == (q+p-(+6.1)-foo0())) && q-(-(+2.1))*p == foo2() || 6.1 > foo1() || !!!!((-3.1) == (-(-1.4))) {
		print(":D2","\n")
	}

	if (foo2()/foo1()*-((-(-1.4))+(-q)+foo2()-(+(-3.1))*6.1)) == (-3.1) {
		print(":D3","\n")
	}

	if !!!(q-((-3.1)+q-o) == foo2()) {
		print(":D4","\n")
	}

	if (foo1()+foo2()+(-(+2.1))+((-(-1.4))-(foo0()-(-(-1.4))))*-6.1-foo1()-(-6.1)/(-3.1)) < foo1() {
		print(":D5","\n")
	}

	if !(p+(-o)+q-(+q)-6.1+(+foo0())-((-(-1.4))*p) > q) {
		print(":D6","\n")
	}

	if ((-3.1)-q)+(-foo2())+(-3.1)*+foo0() <= (-3.1) {
		print(":D7","\n")
	}

	if !!!(((foo0()-(+foo1())*(-3.1)+o-(o/-(-3.1)+(+o)+foo2()-(+2.1)+o)/p)*foo1()-(-o)+foo2()-(-foo2())*foo1()-(+2.1)/+q)+foo1()/-foo1()*foo2() <= (-3.1)) {
		print(":D8","\n")
	}

	if !((q+q)-o == ((-3.1)*foo2())) && p+(-p)-foo2() < (+2.1)/+foo1()*foo0() {
		print(":D9","\n")
	}

	if (-(-1.4))+foo1()/+(foo0()+(+p)-6.1*(o-o)-(foo0()+(+2.1)*-foo1()*+foo1()))-(+(+2.1))+p <= (+2.1) || !!(p != (-3.1)) || !!!((-(-1.4))/-foo1() >= q) {
		print(":D10","\n")
	}

	if foo2()-(+(-(-1.4)))*(foo2()+(+p)*q)-(-6.1)-p >= (-3.1) {
		print(":D11","\n")
	}

	if !!!!!((-3.1)-(+foo2())*6.1 > foo1()/-p) && !!(foo1()-((foo0()*p*+(foo0()-(+6.1)-(+2.1))*-(-3.1)))-foo0()-o < foo1()) {
		print(":D12","\n")
	}

	if !!((foo1()-(-foo1())+p-(-foo1())*foo1()+(-foo2())+p*foo0())/+(foo2()*foo0()) > foo1()) {
		print(":D13","\n")
	}

	if (foo2()+(-foo0())-(-3.1)+p) < (-3.1) && !(o-(-(+2.1))+(-(-1.4))-6.1*foo2()-p >= 6.1) {
		print(":D14","\n")
	}

	print(o,p,q,"\n")
}

package main

func foo0() (float64){
	return 1.1
}

func foo1() (float64){
	return 2.1
}

func foo2() (float64){
	return 3.1
}

func main() {
	o,p,q :=1.2,2.3,3.4

	if !!!((o-((foo1()-q/(+2.1)+(+foo2())*(-3.1)*(-3.1)*(-3.1))*+foo1())+(+2.1)+(-3.1)*o-(+foo0())-q) > p) && q < (-(-1.4))+(-q)-(-3.1) {
		print(":D0","\n")
	}

	if !!(((p-(-3.1))+(+p)+foo2()-6.1+foo2()+(-(+2.1))+6.1) == o*6.1) {
		print(":D1","\n")
	}

	if !!((p-(+2.1)+foo1()-(-p)+(-3.1)/-foo2()-(+(+2.1))+foo2()+foo1()+(-(-3.1))/foo2()) != (-(-1.4))) || (-3.1)*(-3.1) >= foo2()/foo1() {
		print(":D2","\n")
	}

	if !((-(-1.4))*(foo1()-(-foo1())+6.1+q) == (-3.1)) {
		print(":D3","\n")
	}

	if (o/p+q*-p)*+foo1() <= p {
		print(":D4","\n")
	}

	if !(p+(+p)-6.1-(+q)+foo0() > ((+2.1)+(-3.1)-6.1/-foo2())+(+(-(-1.4)))-foo2()) {
		print(":D5","\n")
	}

	if !(p == ((+2.1)-(-(-(-1.4)))-foo0()*+p)) && !(((p-(+2.1))+6.1+foo0()*foo0()+6.1)+foo2()*+foo2()+(-3.1)*(-(-1.4))+(+o)*6.1 == 6.1) || (-(-1.4))*(+2.1) >= (-3.1) {
		print(":D6","\n")
	}

	if foo0()-(-3.1)-(+foo2())+((q-(+2.1)-(+q)-o)) != foo1() {
		print(":D7","\n")
	}

	if !!!((+2.1)/(foo2()*(-3.1))*+p*foo0() != (-3.1)) || !!!(foo1() != 6.1/+foo0()) {
		print(":D8","\n")
	}

	if (foo1()*((p-(-3.1))/6.1-(+(-3.1))/(-(-1.4))+(-(-1.4)))-(-3.1))-foo2()*foo0() == foo0() {
		print(":D9","\n")
	}

	if !!!((o*(o+(-(-1.4)))*foo2()+(+p)*(+2.1)+p) > (+2.1)) && !(foo1()-(+2.1) == (-(-1.4))) {
		print(":D10","\n")
	}

	if q+(+foo2())-(q+(-3.1)) > (o+q)+6.1 {
		print(":D11","\n")
	}

	if (-3.1) <= (q/-foo2())+(+foo0())+6.1 {
		print(":D12","\n")
	}

	if q != (((q*q))) {
		print(":D13","\n")
	}

	if !(o+q+(-3.1)-(foo0()-(-p)+foo2()+(-p)-(o-o)+(+p)-foo2()) == foo1()-(+p)*(6.1*(-3.1)*-foo0())-(+6.1)+o) {
		print(":D14","\n")
	}

	print(o,p,q,"\n")
}

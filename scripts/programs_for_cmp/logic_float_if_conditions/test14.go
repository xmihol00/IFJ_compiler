package main

func foo0() (float64){
	return 1.1
}

func foo1() (float64){
	return 2.1
}

func foo2() (float64){
	return 3.1
}

func main() {
	o,p,q :=1.2,2.3,3.4

	if !((+2.1)*+o > (p-(-foo1())*foo2())) && !!!!!(((+2.1)/o*-q) > foo2()-6.1) && !!((-(-1.4)) == 6.1) {
		print(":D0","\n")
	}

	if 6.1 != 6.1 && !((p-((+2.1)+o+(-3.1)+(-3.1)+q))+(-o)*q == foo0()+o+(+(+2.1))*(+2.1)) && (-3.1)+(+q)-p != foo2() {
		print(":D1","\n")
	}

	if !!!((((foo1()-(-foo2())-foo1())-(+2.1)-(+(+2.1))*foo2())+(+(-3.1))-6.1)-(-3.1)-(+foo2())-foo2()-(-(-1.4)) >= o) {
		print(":D2","\n")
	}

	if (((q+o))) != p {
		print(":D3","\n")
	}

	if !(((6.1*foo0())*-((+2.1)+6.1*foo1()/(+2.1)*+foo1())*foo1()) <= foo2()) {
		print(":D4","\n")
	}

	if !!!((foo0()+(+(-3.1))*o/-(-3.1))*o-(-(-1.4)) > foo1()+(-p)*6.1) {
		print(":D5","\n")
	}

	if !(((q/+((-(-1.4))-foo0())*-(+2.1)))/+foo1()-6.1+foo1()*-p*6.1+foo2() != (-(-1.4))*+(-(-1.4))) {
		print(":D6","\n")
	}

	if !((q*-o)+(-q)-foo1()-((+2.1)*p*p*(q-(-(-3.1))+q-(-(-3.1))/(+2.1)+(+2.1))+(+6.1)+(-(-1.4)))*+q+p-q+(-(-1.4))-foo2()/o == 6.1) {
		print(":D7","\n")
	}

	if !!!!(p-o <= q) && !!(6.1 < (((+2.1)-foo0())+(+p)-((+2.1)/o))/o) {
		print(":D8","\n")
	}

	if !!!!!!!(foo0()+((-3.1)+((p-p-q)*(+2.1))/(-(-1.4))-q)+q-o == (-3.1)) || !(o+(-(-3.1))-(-(-1.4))-(+foo2())-(-3.1) <= q) && foo0()+(-3.1) >= foo0() {
		print(":D9","\n")
	}

	if (-3.1) < (foo1()-(+q)+(foo2()+o)+(+(+2.1))-foo1()) {
		print(":D10","\n")
	}

	if (foo2()+foo1())-(-(-(-1.4)))/foo0() == foo0() {
		print(":D11","\n")
	}

	if q <= q || (foo0()-(+p)*(foo1()*-q-6.1)-(-o)-foo2())-(+q)+o+(+foo0())-foo1()+(-3.1)-(+(-(-1.4)))+p >= q+q {
		print(":D12","\n")
	}

	if q == ((+2.1)-foo1()-(-foo2())-p)-(-3.1) && (-3.1) > o {
		print(":D13","\n")
	}

	if !!(foo0()+(-foo2())/q < (+2.1)) || !!(((foo2()+foo0())) < p) {
		print(":D14","\n")
	}

	print(o,p,q,"\n")
}

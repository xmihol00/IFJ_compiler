package main

func foo0() (float64){
	return 1.1
}

func foo1() (float64){
	return 2.1
}

func foo2() (float64){
	return 3.1
}

func main() {
	o,p,q :=1.2,2.3,3.4

	if !((p-(+q)-(+2.1)+6.1-p) == (-(-1.4))) {
		print(":D0","\n")
	}

	if !((p*+p) >= (-3.1)+(-3.1)+(-3.1)+(-(-3.1))/(-3.1)/-(-(-1.4))*(p*(+2.1))/(p/-foo2()/foo0()-q)) {
		print(":D1","\n")
	}

	if foo1() != (p/+q) && !((+2.1) > foo0()) {
		print(":D2","\n")
	}

	if foo2()/+p*-p*+o/+(((-3.1)-(+p)*(+2.1))-(+foo1())-foo1())*-p/+(-3.1) < o-(-(-1.4)) {
		print(":D3","\n")
	}

	if (((+2.1)/(o+(+foo2())-6.1-(+foo0())+q+6.1+p)))-(+(-3.1))+6.1/foo1() == o {
		print(":D4","\n")
	}

	if (((foo1()+(-3.1)/-foo0()+(+p)-6.1)+6.1)) < foo2() {
		print(":D5","\n")
	}

	if !!!((((-(-1.4))+(+q)*(-3.1))-(p*-q+(-(-(-1.4)))+(+2.1))) > foo1()-(+(+2.1))*(-(-1.4))+foo2()) {
		print(":D6","\n")
	}

	if ((((+2.1)-(+o)-q))-foo1()) <= (+2.1)*(-3.1) || q == foo1() {
		print(":D7","\n")
	}

	if (-(-1.4))-(-o)*p > ((foo2()-foo1())+(-o)+p*(-(-1.4)))+foo0() {
		print(":D8","\n")
	}

	if q-((foo0()+(+(+2.1))+o)-(+o)+foo2()+(+6.1)*foo2()+(-foo1())/o)+o+p == foo1() {
		print(":D9","\n")
	}

	if !!(((-3.1)*o-6.1*foo1()*+foo2()/(-(-1.4))*foo1()/(+2.1)/-(+2.1)/(-(-1.4))) <= foo1()) {
		print(":D10","\n")
	}

	if (foo2()-(-(-1.4)))*(((-3.1)+p)-(-foo1())+p+(+(-3.1))*6.1-p) > foo1() && foo1() < (+2.1) {
		print(":D11","\n")
	}

	if !((((+2.1)*+(-3.1))-(+6.1)-foo0()) > foo0()) && !!!!(foo1() >= foo1()*-(-3.1)) {
		print(":D12","\n")
	}

	if (-3.1)+((+2.1)+foo0()*-q) < 6.1 {
		print(":D13","\n")
	}

	if !!!!(foo1()+(-(+2.1))-((-3.1)*+foo2()+(-3.1)+(+foo1())+(foo0()+(+foo1())+foo0()-o-(-foo2())-6.1)+(+(-3.1))+foo1()*(-3.1)+6.1*q/+foo0()*(-(-1.4))+(-(-3.1))-(-3.1))+(+q)-p-q+foo1()*+o < foo1()) && o < p {
		print(":D14","\n")
	}

	print(o,p,q,"\n")
}
